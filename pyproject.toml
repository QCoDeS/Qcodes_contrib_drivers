[build-system]
requires = [
    "setuptools >= 77.0.3",
    "versioningit >= 2.2.1"
]
build-backend = 'setuptools.build_meta'

[project]
name = "qcodes_contrib_drivers"
description = "User contributed drivers for QCoDeS"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",]
license = "MIT AND GPL-2.0-or-later"
license-files = [
    "LICENSE_TEKTRONIX_AWG520_KEITHLEY_2700",
    "LICENSE",
]
requires-python = ">=3.11"
dependencies = [
    "qcodes>=0.42.0",
    "versioningit>=2.2.1",
    "packaging>=20.0",
    "pandas>=1.4.0",
    "cffi>=1.17.1",
    "python-dotenv>=1.0.1",
    "autobahn>=24.4.2",
]
dynamic = [ "version",]

[[project.maintainers]]
name = "QCoDeS Community"
email = "qcodes-support@microsoft.com"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/QCoDeS/Qcodes_contrib_drivers"
Documentation = "https://qcodes.github.io/Qcodes_contrib_drivers/"
Source = "https://github.com/qcodes/qcodes_contrib_drivers"
Tracker = "https://github.com/QCoDeS/Qcodes_contrib_drivers/issues"

[project.optional-dependencies]
test = [
    "pytest>=6.2.2",
    "pytest-mock>=3.0.0",
    "mypy>=0.940",
    "pytest-cov>=3.0.0",
    "coverage[toml]>=6.2",
    "PyVisa-sim>=0.6.0",
    "types-tqdm>=4.64.6",
    "pandas-stubs>=1.2.0.1",
    "pyserial",
    "windfreak>=0.3.0"
]
docs = [
    "sphinx>=8.1.3,<8.3.0",
    "furo>=2024.8.6",
    "nbsphinx>=0.8.9",
    "PyVisa-sim>=0.6.0",
]

[tool.mypy]
strict_optional = true
disallow_untyped_decorators = true
ignore_missing_imports = false
show_column_numbers = true
warn_unused_ignores = true
warn_unused_configs = true
warn_redundant_casts = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "qcodes_contrib_drivers.drivers.Spectrum.pyspcm",
    "qcodes_contrib_drivers.drivers.OxfordInstruments._decsvisa.*",
    ]
ignore_errors = true

# these are packages that we import
# but either don't have stubs or we
# dont have them installed.
[[tool.mypy.overrides]]
module = [
    "cffi",
    "keysightSD1",
    "nidaqmx.*",
    "niswitch.*",
    "pandas",
    "py_header.*",
    "pyspcm",
    "spirack",
    "zhinst.*",
    "ruamel.*",
    "msl.loadlib",
    "TimeTagger",
    "AMC",
    "ACS",
    "autobahn",
    "python-dotenv",
    "serial.*",
    "scipy.*",
    "nanonis_tramea",
    "windfreak"
]
ignore_missing_imports = true

[tool.ruff.lint]
select = ["TID251"]


[tool.ruff.lint.flake8-tidy-imports.banned-api]
"qcodes.utils.deprecate".msg = "Use typing_extensions.deprecated instead. QCoDeSDeprecationWarning should be imported from qcodes.utils"
"qcodes.instrument.parameter".msg = "QCoDeS parameters should be imported from qcodes.parameters"
"qcodes.instrument.group_parameter".msg = "QCoDeS parameters should be imported from qcodes.parameters"
"qcodes.instrument.specialized_parameters".msg = "QCoDeS parameters should be imported from qcodes.parameters"
"qcodes.instrument.sweep_values".msg = "QCoDeS parameters should be imported from qcodes.parameters"
"qcodes.utils.validators".msg = "QCoDeS validators should be imported from qcodes.validators"
"qcodes.utils.threading".msg = "QCoDeS.utils.threading should be avoided. Please consult qcodes api docs for new locations"
"qcodes.utils.plotting".msg = "QCoDeS plotting utils should be imported from qcodes.plotting"
"qcodes.utils.metadata".msg = "QCoDeS.utils.metadata should be avoided. Please consult qcodes api docs for new locations"
"qcodes.utils.helpers".msg = "QCoDeS.utils.helpers should be avoided. Please consult qcodes api docs for new locations"
"qcodes.utils.dataset.doNd".msg = "QCoDeS.utils.dataset.doNd should be avoided. Please consult qcodes api docs for new locations"

[tool.setuptools]
zip-safe = false


[tool.setuptools.cmdclass]
sdist = "versioningit.cmdclass.sdist"
build_py = "versioningit.cmdclass.build_py"

[tool.versioningit]
default-version = "0.0"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}+{branch}.{vcs}{rev}"
dirty = "{next_version}.dev{distance}+{branch}.{vcs}{rev}.dirty"
distance-dirty = "{next_version}.dev{distance}+{branch}.{vcs}{rev}.dirty"

[tool.versioningit.vcs]
method = "git"
match = ["v*"]

[tool.versioningit.onbuild]
source-file = "src/qcodes_contrib_drivers/_version.py"
build-file = "qcodes_contrib_drivers/_version.py"
