name: "QCoDeS_driver_contrib CI"

# A note on activating conda environments
# At the time of writing the prefered way to activate conda envs (conda 4.6.x)
# is to use conda activate env, and source activate is deprecated. However, this
# requires the user to run conda init which will configure a startup hook for the relevant terminal
# However, azure pipelines does (at the time of writing may 2019) not execute the hook scrips in cmd.exe or bash
# To work around this we use standard source activate qcodes in bash and run the hook manually in cmd.exe
# The hook needs to be rerun for each step.
# We could also run the hooks for bash steps but there is no obvious way to do that in a platform independent way.

trigger:
  branches:
    include:
      - master

jobs:
  - job: "run_the_tests"
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-16.04'
        windows:
          imageName: 'vs2017-win2016'
    pool:
      vmImage: $(imageName)

    steps:
      - task: InstallSSHKey@0
        inputs:
          knownHostsEntry: "github.com,140.82.118.4 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
          sshPublicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC4CueNb+B4aQ9owhu09E1/B4sGgfdZFyGFLwNl7Ye4vXVWhpDdCNLS3lux66xDz0LkVKPeStXSTZ6+NqeLwP2q/9ZP1n7lkoUrzVV2AXVRYv9rD7YYglXQK22oEheeUBzhJUj8Xx5o40clmgnHq5VF5B9W7Hy+/bkhE2Q0xnRVxOq1KnJUttkRHqXy6OY9Ll1XzVNtN61d0Q4LBQNXEyLWrNgT74ThxLv+ckk+nuPs8S869OLoCijnYCy6FzgwcyicYk+FuGhBcW7Sy7W9cGLzbwQZh0efkTlc54FH9PCI2PmI6SaY7oejb4BTmiGBwrkFHQpSlieoreFrDFC1nBJLyfLNu8J8ZqnpBahC3eiU5qxFUmMJzYCykrGw+UBfPPbdPjCHs/b+q4Glsttgg4YP1pbVvAWJK8MiNmAisG5+YFCm2b3jNjVbuJKnZOD4NummrBCawjNsI/nr+ff5rDtycQ1rVl0vgYpfVzzFvI+OUdUjJQOfHvzXS0ZlQ8JGMm1RGPt90Ht2fX0/GWA93Tm64ortJ4rnI4ZOkBUiyS1DSYUgDDi19SvSjDdjurM+TvTTpk2a1cZgsJCW+8E8il9SZRamc+mawP+CYxWDkJ8w1rezt6xdiVyhvRqZJo7WTgyVwTB11PWHlGbiqT6/lFN8dB+xY/Cl89IdWLOnHZfEBw== deploybot"
          sshKeySecureFile: 'ghpagesdeploykey'
      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: "Add conda to PATH on Windows"
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - bash: echo "##vso[task.prependpath]/usr/share/miniconda/bin"
        displayName: "Add conda to PATH on Linux"
        condition: eq( variables['Agent.OS'], 'Linux' )
      - script: |
          conda install conda=4.6 -n base -y
          conda init --all
        displayName: "Conda setup on Windows"
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - bash: |
          sudo conda update -n base conda -y
          sudo conda init bash
        displayName: "Conda setup on Linux"
        condition: eq( variables['Agent.OS'], 'Linux' )
      - bash: |
          conda --version
          curl https://raw.githubusercontent.com/QCoDeS/Qcodes/master/environment.yml > environment.yml
          curl https://raw.githubusercontent.com/QCoDeS/Qcodes/master/test_requirements.txt > test_requirements.txt
          curl https://raw.githubusercontent.com/QCoDeS/Qcodes/master/docs_requirements.txt > docs_requirements.txt
          conda env create --file environment.yml
          source activate qcodes
          pip install -r test_requirements.txt
          pip install -r docs_requirements.txt
          pip install -e .
        displayName: "Install environment, qcodes"
      - bash: |
          source activate qcodes
          mypy qcodes_contrib_drivers
        displayName: "mypy"
      - script: |
          CALL C:\Miniconda\condabin\conda_hook.bat
          CALL conda activate qcodes
          cd qcodes_contrib_drivers
          pytest --junitxml=test-results.xml --cov=qcodes --cov-report=xml --cov-report=html --cov-config=.coveragerc
        displayName: "Pytest on Windows"
        condition: and(succeededOrFailed(), eq( variables['Agent.OS'], 'Windows_NT' ))
      - bash: |
          source activate qcodes
          cd qcodes_contrib_drivers
          xvfb-run --server-args="-screen 0 1024x768x24" pytest --junitxml=test-results.xml --cov=qcodes --cov-report=xml --cov-report=html --cov-config=.coveragerc
        displayName: "Pytest on Linux"
        condition: and(succeededOrFailed(), eq( variables['Agent.OS'], 'Linux' ))
      - task: PublishTestResults@2
        displayName: "Publish test results"
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: 'qcodes_contrib_drivers/test-*.xml'
          testRunTitle: 'Publish test results'
      - task: PublishCodeCoverageResults@1
        displayName: "Publish code coverage results"
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/qcodes_contrib_drivers/coverage.xml'
      - script: |
          CALL C:\Miniconda\condabin\conda_hook.bat
          CALL conda activate qcodes
          cd docs
          REM Turn warnings into errors
          set SPHINXOPTS=-W -v
          make.bat html
        displayName: "Build docs on Windows"
        condition: and(succeededOrFailed(), eq( variables['Agent.OS'], 'Windows_NT' ))
      - script: |
          source activate qcodes
          cd docs
          export SPHINXOPTS=-W -v
          xvfb-run --server-args="-screen 0 1024x768x24" make html
        displayName: "Build docs on Linux"
        condition: and(succeededOrFailed(), eq( variables['Agent.OS'], 'Linux' ))
      - task: PublishBuildArtifacts@1
        displayName: "Publish build docs to Azure DevOps"
        condition: succeededOrFailed()
        inputs:
          pathtoPublish: 'docs/_build/html'
          artifactName: 'qcodes_docs'
          publishLocation: 'Container'
      - script: |
          cd ..
          git config --global user.email "bot"
          git config --global user.name "Documentation Bot"
          git clone --single-branch --branch gh-pages git@github.com:QCoDeS/Qcodes_contrib_drivers.git gh-pages
          cp $(Build.Repository.LocalPath)/docs/_build/html/. gh-pages -R
          cd gh-pages
          git add -A
          git commit -m "Docs build of $(Build.SourceVersion)"
          git push
        displayName: "Publish docs to gh-pages"
        condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'IndividualCI'))