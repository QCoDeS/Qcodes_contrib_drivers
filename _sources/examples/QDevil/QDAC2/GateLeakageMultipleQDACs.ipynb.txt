{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e3b1a093",
   "metadata": {},
   "source": [
    "# Gate Leakage using multiple QDAC-IIs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5203079c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Connected to: QDevil QDAC-II (serial:3, firmware:11-1.14) in 0.21s\n",
      "Connected to: QDevil QDAC-II (serial:2, firmware:11-1.14) in 0.25s\n"
     ]
    }
   ],
   "source": [
    "from time import sleep\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import Image, display\n",
    "from qcodes_contrib_drivers.drivers.QDevil import QDAC2\n",
    "from qcodes_contrib_drivers.drivers.QDevil import QDAC2_Array\n",
    "qdac1_addr = '192.168.8.17'\n",
    "qdac1 = QDAC2.QDac2('QDAC_1', visalib='@py', address=f'TCPIP::{qdac1_addr}::5025::SOCKET')\n",
    "qdac2_addr = '192.168.8.19'\n",
    "qdac2 = QDAC2.QDac2('QDAC_2', visalib='@py', address=f'TCPIP::{qdac2_addr}::5025::SOCKET')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8b18fa5a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Controller: QDAC_1\n",
      "Listener: QDAC_2\n"
     ]
    }
   ],
   "source": [
    "# Connect the two QDAC-IIs together as described in section 5.5 of the manual\n",
    "qdacs = QDAC2_Array.QDac2_Array(qdac1, [qdac2])\n",
    "controller, listener, *_ = qdacs.names\n",
    "print(f'Controller: {controller}')\n",
    "print(f'Listener: {listener}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "05940293",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For testing, connect resistors: \n",
    "# - Controller: 33M between ch 3 & 4, and 5G over ch 1 \n",
    "# - Listener: 47M over ch 1 and 5M6 over ch 3\n",
    "contacts = {controller: {'G1': 1, 'G2': 2, 'G3': 3, 'G4': 4},\n",
    "            listener: {'G5': 1, 'O6': 3}}\n",
    "arrangement = qdacs.arrange(contacts)\n",
    "arrangement.set_virtual_voltages({\n",
    "    'G1': 0.01, 'G2': 0.015, 'G3': 0.013, 'G4': 0.021, 'G5': 0.005, 'O6': 0.011})\n",
    "sleep(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bdcaa052",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Measure leakage by raising the voltage by 3 mV on each channel in turn. \n",
    "modulation_mV=3\n",
    "powerline_cycles=2\n",
    "leakage_matrix_Ohm = arrangement.leakage(\n",
    "    modulation_V=modulation_mV/1000, nplc=powerline_cycles)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b6c26ec8",
   "metadata": {},
   "outputs": [],
   "source": [
    "leakage_megaohm = leakage_matrix_Ohm / 1e6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c5e7f753",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Show the leakage matrix but cap it off at 100 MΩ\n",
    "fig, ax = plt.subplots()\n",
    "plt.title(f'Gate Leakage ({modulation_mV}mV)')\n",
    "img = ax.imshow(leakage_megaohm, interpolation='none', vmin=0, vmax=100)\n",
    "ticks = np.arange(len(arrangement.contact_names))\n",
    "minorticks = np.arange(-0.5, len(ticks), 1)\n",
    "ax.set_xticks(ticks, labels=arrangement.contact_names)\n",
    "ax.set_yticks(ticks, labels=arrangement.contact_names)\n",
    "ax.set_xticks(minorticks, minor=True)\n",
    "ax.set_yticks(minorticks, minor=True)\n",
    "ax.grid(which='minor', color='grey', linewidth=1.5)\n",
    "plt.gca().invert_yaxis()\n",
    "colorbar = fig.colorbar(img)\n",
    "colorbar.set_label('Resistance (MΩ)')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  },
  "nbsphinx": {
   "execute": "never"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
